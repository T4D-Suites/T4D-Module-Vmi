_t4dModVmiKvmSync(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModVmiKvmSync
#   - Name:
#       _t4dModVmiKvmSync
###
#   - Synopsis:
#       generate xml file in index using remote input
###
#   - Usage:
#       * {Name} <option>  [arguments]        = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1

    local _HypervisorKvm=$(_t4dManifestXmlGetMarker kvm name $T4D_MOD_VMI_HV_FILE)
    local _HostFilePath="$T4D_MOD_VMI_LOG_PATH/kvm"

    mkdir -p $_HostFilePath > /dev/null

    for _hv in $(echo $_HypervisorKvm); do

        _t4dPromptSquare "Kvm - $_hv" $plblue

        local _User=$(_t4dManifestXmlGetData kvm name $_hv user $T4D_MOD_VMI_HV_FILE)
        local _Dns=$(_t4dManifestXmlGetData kvm name $_hv dns $T4D_MOD_VMI_HV_FILE)
        
        _t4dSrcKvmGet $_Dns -u $_User -o xml > $_HostFilePath/$_hv.xml
    done
###############################
}

_t4dModVmiKvmStatus(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dModVmiKvmStatus
#   - Name:
#       _t4dModVmiKvmStatus
###
#   - Synopsis:
#        Print kvm virt-lib instance status
###
#   - Usage:
#       * {Name} <option>  [arguments]        = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _id="$1"
    local _hv="$2"

    local _user=$(_t4dManifestXmlGetData kvm name $_hv user $WS_VMI_HV_FILE)
    local _dns=$(_t4dManifestXmlGetData kvm name $_hv dns $WS_VMI_HV_FILE)

    local _res=$(ssh ${_user}@${_dns} "virsh dominfo $_id")

    if [[ "$(echo $_res | grep "error")" == "" ]]; then
        echo $_res | while read line ;
        do
            local _name="$(echo "$line" | cut -d":" -f1)"
            local _data="$(echo "$line" | cut -d":" -f2-)"
            echo "$_name:${plgreen}$_data${pstd}"
        done
        
    else
        _t4dDebugLog $perror "unknown id, try $_hv/<name>"
        return $_t4dErrorCode
    fi



###############################
}

_t4dModVmiKvmSecurityCheck(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModVmiKvmSecurityCheck
#   - Name:
#       _t4dModVmiKvmSecurityCheck
###
#   - Synopsis:
#       security check for Kvm
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    #NoSecurity Check yet
    echo "true"

###############################
}

_t4dModVmiKvmChangeState(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModVmiKvmChangeState
#   - Name:
#       _t4dModVmiKvmChangeState
###
#   - Synopsis:
#       start, stop or reboot given instances remotely
###
#   - Usage:
#       * {Name} <option>  [arguments]        = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1

   _t4dDebugLog $pinfo "_t4dModVmiKvmChangeState not defined yet"
###############################
}
